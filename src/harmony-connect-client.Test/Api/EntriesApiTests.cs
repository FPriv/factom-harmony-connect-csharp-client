/* 
 * Harmony Connect
 *
 * An easy to use API that helps you access the Factom blockchain.
 *
 * OpenAPI spec version: 1.0.19
 * Contact: harmony-support@factom.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using harmony-connect-client.Client;
using harmony-connect-client.Api;
using harmony-connect-client.Model;

namespace harmony-connect-client.Test
{
    /// <summary>
    ///  Class for testing EntriesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EntriesApiTests
    {
        private EntriesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EntriesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EntriesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EntriesApi
            //Assert.IsInstanceOfType(typeof(EntriesApi), instance, "instance is a EntriesApi");
        }

        
        /// <summary>
        /// Test GetEntriesByChainID
        /// </summary>
        [Test]
        public void GetEntriesByChainIDTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chainId = null;
            //int? limit = null;
            //int? offset = null;
            //string stages = null;
            //var response = instance.GetEntriesByChainID(chainId, limit, offset, stages);
            //Assert.IsInstanceOf<EntryList> (response, "response is EntryList");
        }
        
        /// <summary>
        /// Test GetEntryByHash
        /// </summary>
        [Test]
        public void GetEntryByHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chainId = null;
            //string entryHash = null;
            //var response = instance.GetEntryByHash(chainId, entryHash);
            //Assert.IsInstanceOf<Entry> (response, "response is Entry");
        }
        
        /// <summary>
        /// Test GetFirstEntry
        /// </summary>
        [Test]
        public void GetFirstEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chainId = null;
            //var response = instance.GetFirstEntry(chainId);
            //Assert.IsInstanceOf<Entry> (response, "response is Entry");
        }
        
        /// <summary>
        /// Test GetLastEntry
        /// </summary>
        [Test]
        public void GetLastEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chainId = null;
            //var response = instance.GetLastEntry(chainId);
            //Assert.IsInstanceOf<Entry> (response, "response is Entry");
        }
        
        /// <summary>
        /// Test PostEntriesSearch
        /// </summary>
        [Test]
        public void PostEntriesSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chainId = null;
            //SearchBody searchBody = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.PostEntriesSearch(chainId, searchBody, limit, offset);
            //Assert.IsInstanceOf<EntrySearchResponse> (response, "response is EntrySearchResponse");
        }
        
        /// <summary>
        /// Test PostEntryToChainID
        /// </summary>
        [Test]
        public void PostEntryToChainIDTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chainId = null;
            //EntryCreate entryCreate = null;
            //var response = instance.PostEntryToChainID(chainId, entryCreate);
            //Assert.IsInstanceOf<EntryShort> (response, "response is EntryShort");
        }
        
    }

}
